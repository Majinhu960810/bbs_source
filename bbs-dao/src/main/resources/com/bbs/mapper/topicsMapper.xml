<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bbs.mapper.TopicsMapper" >
  <resultMap id="BaseResultMap" type="com.bbs.model.Topics" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="node_id" property="nodeId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="comments_count" property="commentsCount" jdbcType="INTEGER" />
    <result column="is_comments_closed" property="commentsClosed" jdbcType="TINYINT" />
    <result column="browse_num" property="browseNum" jdbcType="INTEGER" />
    <result column="last_replied_by" property="lastRepliedBy" jdbcType="VARCHAR" />
    <result column="last_replied_at" property="lastRepliedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" extends="BaseResultMap" type="com.bbs.model.Topics" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, created_at, updated_at, node_id, user_id, title, comments_count, is_comments_closed, 
    browse_num, last_replied_by, last_replied_at
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.bbs.model.TopicsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bbs.model.TopicsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from topics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pagination != null and pagination.begin >= 0" >
      limit #{pagination.begin}, #{pagination.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from topics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bbs.model.TopicsExample" >
    delete from topics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bbs.model.Topics" useGeneratedKeys="true"  keyProperty="id">
    insert into topics (id, created_at, updated_at, 
      node_id, user_id, title, 
      comments_count, is_comments_closed, browse_num, 
      last_replied_by, last_replied_at, content
      )
    values (#{id,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{nodeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{commentsCount,jdbcType=INTEGER}, #{commentsClosed,jdbcType=TINYINT}, #{browseNum,jdbcType=INTEGER}, 
      #{lastRepliedBy,jdbcType=VARCHAR}, #{lastRepliedAt,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bbs.model.Topics" >
    insert into topics
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="nodeId != null" >
        node_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="commentsCount != null" >
        comments_count,
      </if>
      <if test="commentsClosed != null" >
        is_comments_closed,
      </if>
      <if test="browseNum != null" >
        browse_num,
      </if>
      <if test="lastRepliedBy != null" >
        last_replied_by,
      </if>
      <if test="lastRepliedAt != null" >
        last_replied_at,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeId != null" >
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="commentsCount != null" >
        #{commentsCount,jdbcType=INTEGER},
      </if>
      <if test="commentsClosed != null" >
        #{commentsClosed,jdbcType=TINYINT},
      </if>
      <if test="browseNum != null" >
        #{browseNum,jdbcType=INTEGER},
      </if>
      <if test="lastRepliedBy != null" >
        #{lastRepliedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastRepliedAt != null" >
        #{lastRepliedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="java.lang.Integer" parameterType="com.bbs.model.TopicsExample" >
    select count(*) from topics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update topics
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nodeId != null" >
        node_id = #{record.nodeId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.commentsCount != null" >
        comments_count = #{record.commentsCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentsClosed != null" >
        is_comments_closed = #{record.commentsClosed,jdbcType=TINYINT},
      </if>
      <if test="record.browseNum != null" >
        browse_num = #{record.browseNum,jdbcType=INTEGER},
      </if>
      <if test="record.lastRepliedBy != null" >
        last_replied_by = #{record.lastRepliedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.lastRepliedAt != null" >
        last_replied_at = #{record.lastRepliedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update topics
    set id = #{record.id,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      node_id = #{record.nodeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      comments_count = #{record.commentsCount,jdbcType=INTEGER},
      is_comments_closed = #{record.commentsClosed,jdbcType=TINYINT},
      browse_num = #{record.browseNum,jdbcType=INTEGER},
      last_replied_by = #{record.lastRepliedBy,jdbcType=VARCHAR},
      last_replied_at = #{record.lastRepliedAt,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update topics
    set id = #{record.id,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      node_id = #{record.nodeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      comments_count = #{record.commentsCount,jdbcType=INTEGER},
      is_comments_closed = #{record.commentsClosed,jdbcType=TINYINT},
      browse_num = #{record.browseNum,jdbcType=INTEGER},
      last_replied_by = #{record.lastRepliedBy,jdbcType=VARCHAR},
      last_replied_at = #{record.lastRepliedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbs.model.Topics" >
    update topics
    <set >
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeId != null" >
        node_id = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="commentsCount != null" >
        comments_count = #{commentsCount,jdbcType=INTEGER},
      </if>
      <if test="commentsClosed != null" >
        is_comments_closed = #{commentsClosed,jdbcType=TINYINT},
      </if>
      <if test="browseNum != null" >
        browse_num = #{browseNum,jdbcType=INTEGER},
      </if>
      <if test="lastRepliedBy != null" >
        last_replied_by = #{lastRepliedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastRepliedAt != null" >
        last_replied_at = #{lastRepliedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bbs.model.Topics" >
    update topics
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      node_id = #{nodeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      comments_count = #{commentsCount,jdbcType=INTEGER},
      is_comments_closed = #{commentsClosed,jdbcType=TINYINT},
      browse_num = #{browseNum,jdbcType=INTEGER},
      last_replied_by = #{lastRepliedBy,jdbcType=VARCHAR},
      last_replied_at = #{lastRepliedAt,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbs.model.Topics" >
    update topics
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      node_id = #{nodeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      comments_count = #{commentsCount,jdbcType=INTEGER},
      is_comments_closed = #{commentsClosed,jdbcType=TINYINT},
      browse_num = #{browseNum,jdbcType=INTEGER},
      last_replied_by = #{lastRepliedBy,jdbcType=VARCHAR},
      last_replied_at = #{lastRepliedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>